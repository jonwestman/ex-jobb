@page "/Account/RegisterConfirmation"

@using System.Text
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Identity.UI.Services
@using Microsoft.AspNetCore.WebUtilities
@using BlazorPunchCard.Data
@using System.Net.Mail
@using System.Security.Principal
@using System.Net

@inject UserManager<ApplicationUser> UserManager
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager
@inject IEmailSender EmailSender

<PageTitle>Registreringsbekräftelse</PageTitle>

<h1>Registreringsbekräftelse</h1>

<StatusMessage Message="@statusMessage" />

@if (emailConfirmationLink is not null)
{
    <p>
        Ett bekräftelsemail har nu skickats till din e-postadress som du registrerade dig med
        : <a href="@emailConfirmationLink">Klicka här för att bekräfta ditt konto</a>
    </p>
}
else
{
    <p>Kolla din mail.</p>
}

@code {
    private string? emailConfirmationLink;
    private string? statusMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? Email { get; set; }

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Email is null)
        {
            RedirectManager.RedirectTo("");
        }

        var user = await UserManager.FindByEmailAsync(Email);

        // //TODO: Fix this
        if (user is null)
        {
            HttpContext.Response.StatusCode = StatusCodes.Status404NotFound; 
            statusMessage = "Error finding user for unspecified email";

        }
        // else if (true)
        // {
        //     // Once you add a real email sender, you should remove this code that lets you confirm the account
        //     var userId = await UserManager.GetUserIdAsync(user);
        //     var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
        //     code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        //     emailConfirmationLink = NavigationManager.GetUriWithQueryParameters(
        //         NavigationManager.ToAbsoluteUri("Account/ConfirmEmail").AbsoluteUri,
        //         new Dictionary<string, object?> { ["userId"] = userId, ["code"] = code, ["returnUrl"] = ReturnUrl });
        // }
    }
}
